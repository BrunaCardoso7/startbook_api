[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "startbooks.library.migrations.0001_initial",
        "description": "startbooks.library.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Author\",\n            fields=[\n                (\n                    \"id\",\n                    models.UUIDField(",
        "detail": "startbooks.library.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "LibraryConfig",
        "kind": 6,
        "importPath": "startbooks.library.apps",
        "description": "startbooks.library.apps",
        "peekOfCode": "class LibraryConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"library\"",
        "detail": "startbooks.library.apps",
        "documentation": {}
    },
    {
        "label": "Author",
        "kind": 6,
        "importPath": "startbooks.library.models",
        "description": "startbooks.library.models",
        "peekOfCode": "class Author(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=100)\n# Create your models here.\nclass Book(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    title= models.CharField(max_length=100, null=True, blank=True)\n    published_date = models.DateTimeField(null=True)\n    author= models.ForeignKey(Author, related_name=\"book\", on_delete=models.CASCADE)",
        "detail": "startbooks.library.models",
        "documentation": {}
    },
    {
        "label": "Book",
        "kind": 6,
        "importPath": "startbooks.library.models",
        "description": "startbooks.library.models",
        "peekOfCode": "class Book(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    title= models.CharField(max_length=100, null=True, blank=True)\n    published_date = models.DateTimeField(null=True)\n    author= models.ForeignKey(Author, related_name=\"book\", on_delete=models.CASCADE)",
        "detail": "startbooks.library.models",
        "documentation": {}
    },
    {
        "label": "CreateAuthorSerializer",
        "kind": 6,
        "importPath": "startbooks.library.serializers",
        "description": "startbooks.library.serializers",
        "peekOfCode": "class CreateAuthorSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Author\n        fields = ['id', 'name']  \nclass ListAuthorsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Author\n        fields = '__all__'  \nclass CreateBookSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "startbooks.library.serializers",
        "documentation": {}
    },
    {
        "label": "ListAuthorsSerializer",
        "kind": 6,
        "importPath": "startbooks.library.serializers",
        "description": "startbooks.library.serializers",
        "peekOfCode": "class ListAuthorsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Author\n        fields = '__all__'  \nclass CreateBookSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Book\n        fields = ['id', 'title', 'author', 'published_date'] \nclass ListBooksSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "startbooks.library.serializers",
        "documentation": {}
    },
    {
        "label": "CreateBookSerializer",
        "kind": 6,
        "importPath": "startbooks.library.serializers",
        "description": "startbooks.library.serializers",
        "peekOfCode": "class CreateBookSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Book\n        fields = ['id', 'title', 'author', 'published_date'] \nclass ListBooksSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Book\n        fields = '__all__'  \nclass UpdateBookSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "startbooks.library.serializers",
        "documentation": {}
    },
    {
        "label": "ListBooksSerializer",
        "kind": 6,
        "importPath": "startbooks.library.serializers",
        "description": "startbooks.library.serializers",
        "peekOfCode": "class ListBooksSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Book\n        fields = '__all__'  \nclass UpdateBookSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Book\n        fields = ['id', 'title', 'author', 'published_date'] \nclass UpdateAuthorSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "startbooks.library.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateBookSerializer",
        "kind": 6,
        "importPath": "startbooks.library.serializers",
        "description": "startbooks.library.serializers",
        "peekOfCode": "class UpdateBookSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Book\n        fields = ['id', 'title', 'author', 'published_date'] \nclass UpdateAuthorSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Author\n        fields = ['id', 'name']",
        "detail": "startbooks.library.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateAuthorSerializer",
        "kind": 6,
        "importPath": "startbooks.library.serializers",
        "description": "startbooks.library.serializers",
        "peekOfCode": "class UpdateAuthorSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Author\n        fields = ['id', 'name']",
        "detail": "startbooks.library.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "startbooks.library.urls",
        "description": "startbooks.library.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"author/\", LibraryViewSet.as_view({\n        'get': 'retrieve_author',\n        'post': 'create_author'\n    }), name=\"author\"),\n    path(\"book/\", LibraryViewSet.as_view({\n        'get': 'retrieve_books',\n        'post': 'create_book'\n        }), name=\"books\"),\n        path(\"book/<uuid:pk>/\", LibraryViewSet.as_view({",
        "detail": "startbooks.library.urls",
        "documentation": {}
    },
    {
        "label": "LibraryViewSet",
        "kind": 6,
        "importPath": "startbooks.library.views",
        "description": "startbooks.library.views",
        "peekOfCode": "class LibraryViewSet(viewsets.GenericViewSet):\n    def get_serializer_class(self):\n        if self.action == \"create_book\":\n            return CreateBookSerializer\n        elif self.action == \"create_author\":\n            return CreateAuthorSerializer\n        elif (self.action == \"retrieve_books\"):\n            return ListBooksSerializer\n        elif (self.action == \"retrieve_author\"):\n            return ListAuthorsSerializer",
        "detail": "startbooks.library.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "startbooks.startbooks.asgi",
        "description": "startbooks.startbooks.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "startbooks.startbooks.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-bmct3#)co$0t%n5#h30)g7w(r)u3iezme^p8c4srrtn!zrxd#x\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-bmct3#)co$0t%n5#h30)g7w(r)u3iezme^p8c4srrtn!zrxd#x\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"startbooks\",\n    \"library\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"startbooks\",\n    \"library\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"startbooks\",\n    \"library\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"startbooks\",\n    \"library\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"rest_framework\",",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"startbooks.urls\"",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "ROOT_URLCONF = \"startbooks.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "WSGI_APPLICATION = \"startbooks.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "startbooks.startbooks.settings",
        "description": "startbooks.startbooks.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "startbooks.startbooks.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "startbooks.startbooks.urls",
        "description": "startbooks.startbooks.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path('api/v1/', include(\"library.urls\"))\n]",
        "detail": "startbooks.startbooks.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "startbooks.startbooks.wsgi",
        "description": "startbooks.startbooks.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "startbooks.startbooks.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "startbooks.manage",
        "description": "startbooks.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"startbooks.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "startbooks.manage",
        "documentation": {}
    }
]